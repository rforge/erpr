attach(panel3dat)#
#
pred_panel3dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target
detach(panel3dat)
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat$dep)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(400,800), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
#
pred_panel2dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat$dep)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(400,800), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat$dep)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(400,800), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(400,800), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
#
pred_panel2dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(400,800), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(400,800), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
panel3dat
log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub)
)
log_freq.const1.repub
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(400,800), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
#
pred_panel2dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(400,800), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(400,800), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
#
pred_panel2dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
#
pred_panel2dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
panel3dat
panel2dat
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
#
pred_panel2dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
panel1dat
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))
panel2dat
panel1dat
attach(panel1dat)
pred_panel1dat= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(panel1dat)
panel1dat$dep=exp(pred_panel1dat)
panel1dat
ls()
NN.final.reported
summary(NN.final.reported)
NN.final.reported
predict(NN.final.reported)
predict.merMod
?predict.merMod
NN$log_TotViewDur.target=log(NN$TotViewDur.target)
NN
head(NN)
REVISIONE 3 PAPER#
### NOTA!! è il modello riportato con marelli. Nota che non ho usato "update" altrimenti non mi restituiva i p-values. #
NN.final.reported2=lmer(formula = log_TotViewDur.target ~ type + log_freq.target.repub + #
    log_freq.const1.repub + res_log_freq.const2.repub + length.target + #
    (1 | Subject) + type:log_freq.target.repub + type:log_freq.const1.repub + #
    log_freq.target.repub:log_freq.const1.repub + type:res_log_freq.const2.repub + #
    log_freq.target.repub:res_log_freq.const2.repub + type:length.target + #
    log_freq.target.repub:length.target + log_freq.const1.repub:length.target + #
    res_log_freq.const2.repub:length.target + type:log_freq.target.repub:log_freq.const1.repub + #
    type:log_freq.target.repub:res_log_freq.const2.repub + type:log_freq.target.repub:length.target + #
    type:log_freq.const1.repub:length.target + log_freq.target.repub:log_freq.const1.repub:length.target + #
    type:res_log_freq.const2.repub:length.target + log_freq.target.repub:res_log_freq.const2.repub:length.target + #
    type:log_freq.target.repub:res_log_freq.const2.repub:length.target+(1|TARGET),#
    data = NN)
NN.final.reported2
summary(NN.final.reported2)
predict(NN.final.reported, newdata=NN[1,]
)
NN[1,]
predict(NN.final.reported2, newdata=NN[1,])
NN.final.reported2
predict(NN.final.reported2)
predict(NN.final.reported2, newdata=data.frame(NN[1,]))
data.frame(NN[1,])
predict(NN.final.reported2, newdata=data.frame(NN[2,]))
predict(NN.final.reported2, newdata=data.frame(NN[3,]))
predict(NN.final.reported2, newdata=data.frame(NN[1:10,]))
predict(NN.final.reported2, newdata=NN))
predict(NN.final.reported2, newdata=NN)
NN.final.reported2
detach(package:lmerTest)
REVISIONE 3 PAPER#
### NOTA!! è il modello riportato con marelli. Nota che non ho usato "update" altrimenti non mi restituiva i p-values. #
NN.final.reported=lmer(formula = log(TotViewDur.target) ~ type + log_freq.target.repub + #
    log_freq.const1.repub + res_log_freq.const2.repub + length.target + #
    (1 | Subject) + type:log_freq.target.repub + type:log_freq.const1.repub + #
    log_freq.target.repub:log_freq.const1.repub + type:res_log_freq.const2.repub + #
    log_freq.target.repub:res_log_freq.const2.repub + type:length.target + #
    log_freq.target.repub:length.target + log_freq.const1.repub:length.target + #
    res_log_freq.const2.repub:length.target + type:log_freq.target.repub:log_freq.const1.repub + #
    type:log_freq.target.repub:res_log_freq.const2.repub + type:log_freq.target.repub:length.target + #
    type:log_freq.const1.repub:length.target + log_freq.target.repub:log_freq.const1.repub:length.target + #
    type:res_log_freq.const2.repub:length.target + log_freq.target.repub:res_log_freq.const2.repub:length.target + #
    type:log_freq.target.repub:res_log_freq.const2.repub:length.target+(1|TARGET),#
    data = NN)
REVISIONE 3 PAPER#
### NOTA!! è il modello riportato con marelli. Nota che non ho usato "update" altrimenti non mi restituiva i p-values. #
NN.final.reported2=lmer(formula = log_TotViewDur.target ~ type + log_freq.target.repub + #
    log_freq.const1.repub + res_log_freq.const2.repub + length.target + #
    (1 | Subject) + type:log_freq.target.repub + type:log_freq.const1.repub + #
    log_freq.target.repub:log_freq.const1.repub + type:res_log_freq.const2.repub + #
    log_freq.target.repub:res_log_freq.const2.repub + type:length.target + #
    log_freq.target.repub:length.target + log_freq.const1.repub:length.target + #
    res_log_freq.const2.repub:length.target + type:log_freq.target.repub:log_freq.const1.repub + #
    type:log_freq.target.repub:res_log_freq.const2.repub + type:log_freq.target.repub:length.target + #
    type:log_freq.const1.repub:length.target + log_freq.target.repub:log_freq.const1.repub:length.target + #
    type:res_log_freq.const2.repub:length.target + log_freq.target.repub:res_log_freq.const2.repub:length.target + #
    type:log_freq.target.repub:res_log_freq.const2.repub:length.target+(1|TARGET),#
    data = NN)
NN.final.reported2
summary(NN.final.reported2)
predict(NN.final.reported2, newdata=NN[c(1,2),])
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)
detach(realdat)
model_pred=predict(NN.final.reported)
realdat=NN.final.reported@frame[1,]
model_pred=predict(NN.final.reported)#
#
#recupero a che osservazione corrisponde la prima previsione#
realdat=NN.final.reported@frame[1,]#
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
#
attach(realdat)#
mypred0= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(realdat)#
#
# aggiungo gli effetti random #
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]#
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]#
mypred-predictions#
#sono
carico gli oggetti necessari riferendomi ad un altro script.#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
model_pred=predict(NN.final.reported)#
#
#recupero a che osservazione corrisponde la prima previsione#
realdat=NN.final.reported@frame[1,]#
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
#
attach(realdat)#
mypred0= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(realdat)#
#
# aggiungo gli effetti random #
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]#
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]#
mypred-model_pred#
#sono molto simili, probabilmente ci sono solo differenze di approssimazione
mypred
model_pred
model_pred[1]
mypred
model_pred=predict(NN.final.reported)#
#
#recupero a che osservazione corrisponde la prima previsione#
realdat=NN.final.reported@frame[1,]#
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
#
attach(realdat)#
mypred0= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(realdat)#
#
# aggiungo gli effetti random #
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]#
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]#
mypred+ranSubj+ranItem-model_pred#
#sono molto simili, probabilmente ci sono solo differenze di approssimazione
mypred+ranSubj+ranItem-model_pred[1]
carico gli oggetti necessari riferendomi ad un altro script.#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
model_pred=predict(NN.final.reported)#
#
#recupero a che osservazione corrisponde la prima previsione#
realdat=NN.final.reported@frame[1,]#
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
#
attach(realdat)#
mypred0= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(realdat)#
#
# aggiungo gli effetti random #
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]#
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]
realdat
mypred
predictions[1]
model_pred[1]
mypred=mypred0+ranSubj+ranItem
mypred-model_pred[1]
i=420
realdat=NN.final.reported@frame[i,]
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
#
attach(realdat)#
mypred0= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(realdat)
realdat
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]
ranSubj
ranef(NN.final.reported)
ranItem
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]
reanItem
ranItem
mypred=mypred0+ranSubj+ranItem
res[i]=mypred-model_pred[1]
mypred-model_pred[1]
realdat=NN.final.reported@frame[i,]#
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
#
attach(realdat)#
mypred0= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(realdat)#
#
# aggiungo gli effetti random #
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]#
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]#
#
mypred=mypred0+ranSubj+ranItem#
#
res[i]=mypred-model_pred[1]#
#sono molto
mypred_model_pred[i]
mypred-model_pred[i]
carico gli oggetti necessari riferendomi ad un altro script.#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
model_pred=predict(NN.final.reported)#
#
#creo un vettore vuoto.#
res=NULL#
#
for (i in 1:length(model_pred)) {#
#
realdat=NN.final.reported@frame[i,]#
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
#
attach(realdat)#
mypred0= 27.23482 + typeNNsx*(-14.64124) +  (-3.31829) * log_freq.target.repub  + (-2.08209) * log_freq.const1.repub + (-2.24568) * res_log_freq.const2.repub +#
(-1.64198) * length.target + 1.46744 * typeNNsx*log_freq.target.repub + 1.26298 * typeNNsx*log_freq.const1.repub + 0.30987 * log_freq.target.repub * log_freq.const1.repub +#
2.80647 * typeNNsx * res_log_freq.const2.repub  + 0.43949 * log_freq.target.repub * res_log_freq.const2.repub + 0.92632 * typeNNsx * length.target + 0.24927 * log_freq.target.repub * length.target  + 0.16734 * log_freq.const1.repub*length.target   + 0.21906 * res_log_freq.const2.repub*length.target + (-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub + (-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub  - 0.03630  * typeNNsx * log_freq.target.repub * length.target -0.07859 * typeNNsx*log_freq.const1.repub*length.target -0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target + -0.27770 * typeNNsx * res_log_freq.const2.repub * length.target -0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target + 0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target#
#
detach(realdat)#
#
# aggiungo gli effetti random #
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]#
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]#
#
mypred=mypred0+ranSubj+ranItem#
#
res[i]=mypred-model_pred[i]#
#sono molto simili, probabilmente ci sono solo differenze di approssimazione#
}
rm(list=ls)
rm(list=ls())
carico gli oggetti necessari riferendomi ad un altro script.#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
model_pred=predict(NN.final.reported)#
#
#creo un vettore vuoto.#
res=NULL#
#
for (i in 1:length(model_pred)) {#
#
#recupero l'osservazione i-esima del modello. Nota che lo faccio dal modello perché alcune osservazioni sono state escluse dal data.frame originale.#
realdat=NN.final.reported@frame[i,]#
#
#creo la variabile typeNNsx come 0 se NNdx e 1 se NNsx.#
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
#
attach(realdat)#
#
#calcolo manualmente il modello.#
mypred0= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(realdat)#
#
# creo gli effetti random #
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]#
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]#
#
# li aggiungo alla previsione#
mypred=mypred0+ranSubj+ranItem#
#
#calcolo la differenza tra il modello e la mia previsione#
res[i]=mypred-model_pred[i]#
#
}
res
hist(res)
hist(res, xlim=x(-0.05, 0.05))
hist(res, xlim=c(-0.05, 0.05))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
mypred0= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
mypred0= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
mypred0= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
predpanel1dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
predpanel2dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
predpanel3dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
pred_panel2dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
pred_panel2dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 1000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
panel3dat
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 1000), xlim=c(2,6), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
pred_panel2dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 1000), xlim=c(2,6), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 1000), xlim=c(2,6), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.90), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
pred_panel2dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=round(panels_or_freq.const2,2)#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
pred_panel2dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
panels_freq.const2
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]
panel_or_freq.const2
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]
panels_or_freq.const2
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))
panels_or_freq.const2
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
pred_panel2dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=panels_or_freq.const2)#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))
panels_or_freq.const2
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.
panel1dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))
panel1dat
panel2dat
panel4dat
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel2dat)#
pred_panel2dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel3dat)#
#
pred_panel3dat= #
(27.23482) + #
(typeNNsx*(-14.64124) ) +  #
((-3.31829) * log_freq.target.repub  )+ #
((-2.08209) * log_freq.const1.repub )+ #
((-2.24568) * res_log_freq.const2.repub )+#
((-1.64198) * length.target) + #
(1.46744 * typeNNsx*log_freq.target.repub)+ #
(1.26298 * typeNNsx*log_freq.const1.repub )+ #
(0.30987 * log_freq.target.repub * log_freq.const1.repub )+#
(2.80647 * typeNNsx * res_log_freq.const2.repub  )+ #
(0.43949 * log_freq.target.repub * res_log_freq.const2.repub )+ #
(0.92632 * typeNNsx * length.target )+#
(0.24927 * log_freq.target.repub * length.target ) + #
(0.16734 * log_freq.const1.repub*length.target ) + #
(0.21906 * res_log_freq.const2.repub*length.target) + #
((-0.09957) * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
((-0.60175) * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(- 0.03630  * typeNNsx * log_freq.target.repub * length.target) +#
(-0.07859 * typeNNsx*log_freq.const1.repub*length.target)+#
(-0.02394 * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(-0.27770 * typeNNsx * res_log_freq.const2.repub * length.target)+#
(-0.04332 * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(0.06050 * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
panel1dat
panel2dat
panel3dat
NN.final.reported
str(NN.final.reported)
summary(NN.final.reported)
a=summary(NN.final.reported)
str(a)
a$coefficients
class(a$coefficients)
class(a$coefficients[,"Estimate"])
a$coefficients[,"Estimate"]
coefficeints=summary(NN.final.reported)$coefficients[,"Estimate"]
coefficients
coefficeints=summary(NN.final.reported)$coefficients
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]
coeffs
coeffs[1,]
coeffs[1]
coeffs[13]
coeffs[18]
coeffs[19]
carico gli oggetti necessari riferendomi ad un altro script.#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
model_pred=predict(NN.final.reported)#
#
#creo un vettore vuoto.#
res=NULL#
#
for (i in 1:length(model_pred)) {#
#
#recupero l'osservazione i-esima del modello. Nota che lo faccio dal modello perché alcune osservazioni sono state escluse dal data.frame originale.#
realdat=NN.final.reported@frame[i,]#
#
#creo la variabile typeNNsx come 0 se NNdx e 1 se NNsx.#
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
#
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#
attach(realdat)#
#
#calcolo manualmente il modello.#
mypred0= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5]* res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21]* typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(realdat)#
#
# creo gli effetti random #
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]#
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]#
#
# li aggiungo alla previsione#
mypred=mypred0+ranSubj+ranItem#
#
#calcolo la differenza tra il modello e la mia previsione#
res[i]=mypred-model_pred[i]#
#
}#
#corrispondono quasi perfettamente, probabilmente ci sono solo errori di approssimazione
carico gli oggetti necessari riferendomi ad un altro script.#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
model_pred=predict(NN.final.reported)#
#
#creo un vettore vuoto.#
res=NULL#
#
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
for (i in 1:length(model_pred)) {#
#
#recupero l'osservazione i-esima del modello. Nota che lo faccio dal modello perché alcune osservazioni sono state escluse dal data.frame originale.#
realdat=NN.final.reported@frame[i,]#
#
#creo la variabile typeNNsx come 0 se NNdx e 1 se NNsx.#
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
attach(realdat)#
#
#calcolo manualmente il modello.#
mypred0= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5]* res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21]* typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(realdat)#
#
# creo gli effetti random #
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]#
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]#
#
# li aggiungo alla previsione#
mypred=mypred0+ranSubj+ranItem#
#
#calcolo la differenza tra il modello e la mia previsione#
res[i]=mypred-model_pred[i]#
#
}#
#corrispondono quasi perfettamente, probabilmente ci sono solo errori di approssimazione
res
hist(res, xlim=c(-0.0005, 0.0005))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred0= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5]* res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21]* typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}
predman(panel1dat)
panel1dat
attach(panel1dat)
mypred0= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5]* res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21]* typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)
mypred0
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5]* res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21]* typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}
predman(panel1dat)
detach(panel1dat)
predman(panel1dat)
panel1dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])
pred_panel2dat=predman(panel2dat)
detach(panel1dat)
pred_panel2dat=predman(panel2dat)
pred_panel2dat
detach(panel2dat)
pred_panel3dat=predman(panel3dat)
pred_panel3dat
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5]* res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21]* typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel2dat=predman(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel3dat=predman(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5]* res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21]* typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,1))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel2dat=predman(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 12")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel3dat=predman(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 14")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])
panel1dat
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5]* res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21]* typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,2))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel2dat=predman(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 12")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel3dat=predman(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 14")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=12) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel4dat)#
#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=exp(pred_panel4dat)#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 5 (LENGTH=12) ###############
#############################################
#
panel5dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel5dat=predman(panel5dat)#
#
panel5dat$dep=exp(pred_panel5dat)#
plot(panel5dat$log_freq.target.repub, panel5dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 12")#
segments(panel5dat[1,]$log_freq.target.repub, panel5dat[1,]$dep, panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, lty=1) #
text(panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[2])#
segments(panel5dat[3,]$log_freq.target.repub, panel5dat[3,]$dep, panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, lty=2)#
text(panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[4])#
segments(panel5dat[5,]$log_freq.target.repub, panel5dat[5,]$dep, panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, lty=3)#
text(panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[6])#
segments(panel5dat[7,]$log_freq.target.repub, panel5dat[7,]$dep, panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, lty=3)#
text(panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[8])#
segments(panel5dat[9,]$log_freq.target.repub, panel5dat[9,]$dep, panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, lty=3)#
text(panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 6 (LENGTH=14) ###############
#############################################
#
panel6dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel6dat=predman(panel6dat)#
#
panel6dat$dep=exp(pred_panel6dat)#
plot(panel6dat$log_freq.target.repub, panel6dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 14")#
segments(panel6dat[1,]$log_freq.target.repub, panel6dat[1,]$dep, panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, lty=1) #
text(panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[2])#
segments(panel6dat[3,]$log_freq.target.repub, panel6dat[3,]$dep, panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, lty=2)#
text(panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[4])#
segments(panel6dat[5,]$log_freq.target.repub, panel6dat[5,]$dep, panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, lty=3)#
text(panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[6])#
segments(panel6dat[7,]$log_freq.target.repub, panel6dat[7,]$dep, panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, lty=3)#
text(panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[8])#
segments(panel6dat[9,]$log_freq.target.repub, panel6dat[9,]$dep, panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, lty=3)#
text(panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5]* res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21]* typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,2))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=12) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel4dat)#
#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=exp(pred_panel4dat)#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel2dat=predman(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 12")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 5 (LENGTH=12) ###############
#############################################
#
panel5dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel5dat=predman(panel5dat)#
#
panel5dat$dep=exp(pred_panel5dat)#
plot(panel5dat$log_freq.target.repub, panel5dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 12")#
segments(panel5dat[1,]$log_freq.target.repub, panel5dat[1,]$dep, panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, lty=1) #
text(panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[2])#
segments(panel5dat[3,]$log_freq.target.repub, panel5dat[3,]$dep, panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, lty=2)#
text(panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[4])#
segments(panel5dat[5,]$log_freq.target.repub, panel5dat[5,]$dep, panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, lty=3)#
text(panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[6])#
segments(panel5dat[7,]$log_freq.target.repub, panel5dat[7,]$dep, panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, lty=3)#
text(panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[8])#
segments(panel5dat[9,]$log_freq.target.repub, panel5dat[9,]$dep, panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, lty=3)#
text(panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel3dat=predman(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 14")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 6 (LENGTH=14) ###############
#############################################
#
panel6dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel6dat=predman(panel6dat)#
#
panel6dat$dep=exp(pred_panel6dat)#
plot(panel6dat$log_freq.target.repub, panel6dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 14")#
segments(panel6dat[1,]$log_freq.target.repub, panel6dat[1,]$dep, panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, lty=1) #
text(panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[2])#
segments(panel6dat[3,]$log_freq.target.repub, panel6dat[3,]$dep, panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, lty=2)#
text(panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[4])#
segments(panel6dat[5,]$log_freq.target.repub, panel6dat[5,]$dep, panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, lty=3)#
text(panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[6])#
segments(panel6dat[7,]$log_freq.target.repub, panel6dat[7,]$dep, panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, lty=3)#
text(panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[8])#
segments(panel6dat[9,]$log_freq.target.repub, panel6dat[9,]$dep, panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, lty=3)#
text(panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[10])
carico gli oggetti necessari riferendomi ad un altro script.#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
model_pred=predict(NN.final.reported)#
#
#creo un vettore vuoto.#
res=NULL#
#
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
for (i in 1:length(model_pred)) {#
#
#recupero l'osservazione i-esima del modello. Nota che lo faccio dal modello perché alcune osservazioni sono state escluse dal data.frame originale.#
realdat=NN.final.reported@frame[i,]#
#
#creo la variabile typeNNsx come 0 se NNdx e 1 se NNsx.#
realdat$typeNNsx=as.numeric(realdat$type=="NNsx")#
attach(realdat)#
#
#calcolo manualmente il modello.#
mypred0= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5]* res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21]* typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
#
detach(realdat)#
#
# creo gli effetti random #
ranSubj=ranef(NN.final.reported)$Subject[rownames(ranef(NN.final.reported)$Subject)%in%realdat$Subject,]#
ranItem=ranef(NN.final.reported)$TARGET[rownames(ranef(NN.final.reported)$TARGET)%in%realdat$TARGET,]#
#
# li aggiungo alla previsione#
mypred=mypred0+ranSubj+ranItem#
#
#calcolo la differenza tra il modello e la mia previsione#
res[i]=mypred-model_pred[i]#
#
}#
#corrispondono praticamente in maniera perfetta, probabilmente ci sono solo errori di approssimazione#
#
hist(res, xlim=c(-0.0005, 0.0005))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) #ho creato lo step in modo da creare passi uguali. Ma non influenzerà visto che verrà fatta una retta.#
par(mfrow=c(3,2))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=12) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel4dat)#
#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=exp(pred_panel4dat)#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel2dat=predman(panel2dat)#
#
panel2dat$dep=exp(pred_panel2dat)#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 12")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 5 (LENGTH=12) ###############
#############################################
#
panel5dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel5dat=predman(panel5dat)#
#
panel5dat$dep=exp(pred_panel5dat)#
plot(panel5dat$log_freq.target.repub, panel5dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 12")#
segments(panel5dat[1,]$log_freq.target.repub, panel5dat[1,]$dep, panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, lty=1) #
text(panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[2])#
segments(panel5dat[3,]$log_freq.target.repub, panel5dat[3,]$dep, panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, lty=2)#
text(panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[4])#
segments(panel5dat[5,]$log_freq.target.repub, panel5dat[5,]$dep, panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, lty=3)#
text(panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[6])#
segments(panel5dat[7,]$log_freq.target.repub, panel5dat[7,]$dep, panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, lty=3)#
text(panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[8])#
segments(panel5dat[9,]$log_freq.target.repub, panel5dat[9,]$dep, panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, lty=3)#
text(panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel3dat=predman(panel3dat)#
#
panel3dat$dep=exp(pred_panel3dat)#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 14")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 6 (LENGTH=14) ###############
#############################################
#
panel6dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel6dat=predman(panel6dat)#
#
panel6dat$dep=exp(pred_panel6dat)#
plot(panel6dat$log_freq.target.repub, panel6dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 14")#
segments(panel6dat[1,]$log_freq.target.repub, panel6dat[1,]$dep, panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, lty=1) #
text(panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[2])#
segments(panel6dat[3,]$log_freq.target.repub, panel6dat[3,]$dep, panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, lty=2)#
text(panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[4])#
segments(panel6dat[5,]$log_freq.target.repub, panel6dat[5,]$dep, panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, lty=3)#
text(panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[6])#
segments(panel6dat[7,]$log_freq.target.repub, panel6dat[7,]$dep, panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, lty=3)#
text(panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[8])#
segments(panel6dat[9,]$log_freq.target.repub, panel6dat[9,]$dep, panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, lty=3)#
text(panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[10])
m <- matrix(c(1,2,3,3,4,5,6,6),ncol = 2,byrow = TRUE)#
layout(m,widths = c(0.5,0.5),heights = c(0.45,0.05,0.45,0.05))#
#
par(mar = c(2,4,4,2) + 0.1)#
hist(x1, xlab="", main="Group A")#
hist(x2, xlab="", main="Group B")#
#
par(mar = c(0,0,0,0)) #
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
u <- par("usr")#
text(1,u[4],labels = "Here",col = "red",pos = 1)#
#
par(mar = c(2,4,2,2) + 0.1)#
hist(x3, xlab="", main="")#
hist(x4, xlab="", main="")#
#
par(mar = c(0,0,0,0)) #
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
u <- par("usr")#
text(1,u[4],labels = "Here",col = "red",pos = 1)
x1 = rnorm(100)#
x2 = rnorm(100)#
x3 = rnorm(100)#
x4 = rnorm(100)#
#
par(mfrow=c(2,2)) #
hist(x1, xlab="", main="Group A")#
hist(x2, xlab="", main="Group B")#
hist(x3, xlab="", main="")#
hist(x4, xlab="", main="")
m <- matrix(c(1,2,3,3,4,5,6,6),ncol = 2,byrow = TRUE)#
layout(m,widths = c(0.5,0.5),heights = c(0.45,0.05,0.45,0.05))#
#
par(mar = c(2,4,4,2) + 0.1)#
hist(x1, xlab="", main="Group A")#
hist(x2, xlab="", main="Group B")#
#
par(mar = c(0,0,0,0)) #
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
u <- par("usr")#
text(1,u[4],labels = "Here",col = "red",pos = 1)#
#
par(mar = c(2,4,2,2) + 0.1)#
hist(x3, xlab="", main="")#
hist(x4, xlab="", main="")#
#
par(mar = c(0,0,0,0)) #
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
u <- par("usr")#
text(1,u[4],labels = "Here",col = "red",pos = 1)
par(mar = c(0,0,0,0)) #
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
u <- par("usr")#
text(1,u[4],labels = "Here",col = "red",pos = 1)
m <- matrix(c(1,1,2,3,4,4,5,6,7,7,8,9),ncol = 2,byrow = TRUE)
par(mar = c(0,0,0,0)) #
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
u <- par("usr")#
text(1,u[4],labels = "Here",col = "red",pos = 1)
par(mar = c(2,4,4,2) + 0.1)#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=12) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel4dat)#
#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=exp(pred_panel4dat)#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])
SUDDIVIDO I PANNELLI#
m <- matrix(c(1,1,2,3,4,4,5,6,7,7,8,9),ncol = 2,byrow = TRUE)#
layout(m,widths = c(0.5,0.5),heights = c(0.45,0.05,0.45,0.05))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
par(mar = c(0,0,0,0)) #
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
u <- par("usr")#
text(1,u[4],labels = "Here",col = "red",pos = 1)#
par(mar = c(2,4,4,2) + 0.1)#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=12) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel4dat)#
#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=exp(pred_panel4dat)#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])
m <- matrix(c(1,1,2,3,4,4,5,6,7,7,8,9),ncol = 2,byrow = TRUE)#
layout(m)#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
par(mar = c(0,0,0,0)) #
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
u <- par("usr")#
text(1,u[4],labels = "Here",col = "red",pos = 1)
u[4]
SUDDIVIDO I PANNELLI#
m <- matrix(c(1,1,2,3,4,4,5,6,7,7,8,9),ncol = 2,byrow = TRUE)#
layout(m)#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
par(mar = c(0,0,0,0)) #
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
u <- par("usr")#
text(1,u[4],labels = "Here",col = "red",pos = 1)#
par(mar = c(2,4,4,2) + 0.1)#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=12) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel4dat)#
#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=exp(pred_panel4dat)#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])
SUDDIVIDO I PANNELLI#
m <- matrix(c(1,1,2,3,4,4,5,6,7,7,8,9),ncol = 2,byrow = TRUE)#
layout(m)#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
par(mar = c(0,0,0,0)) #
plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
u <- par("usr")#
text(1,u[4],labels = "Length = 10", pos = 1)#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel1dat)#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=12) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
attach(panel4dat)#
#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=exp(pred_panel4dat)#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="Compound length = 10")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) ##
#############################################
### SUDDIVIDO I PANNELLI#
#############################################
#
#m <- matrix(c(1,1,2,3,4,4,5,6,7,7,8,9),ncol = 2,byrow = TRUE)#
#layout(m,widths = c(0.5,0.5),heights = c(0.04, 0.3, 0.03, 0.3, 0.03, 0.3))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
###############
# LABEL LENGTH = 10#
##############
#oldpar=par()#
#
#par(mar=c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 10", pos = 1, cex=1.5)#
##########
#
par(mfrow=c(3,2), mar=c(5.1, 4.1, 2, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=pred_panel1dat#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="", yaxt="n")#
axis(2, at=log(seq(100, 2000, 300)), labels=seq(100, 2000, 300))#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=10) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=pred_panel4dat#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])#
###############
# LABEL LENGTH = 10#
##############
#
#par(mar = c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 12", pos = 1, cex=1.5)#
#
##########
##########
#
par(mar=c(5.1, 4.1, 4.1, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel2dat=predman(panel2dat)#
#
panel2dat$dep=pred_panel2dat#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 5 (LENGTH=12) ###############
#############################################
#
panel5dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel5dat=predman(panel5dat)#
#
panel5dat$dep=pred_panel5dat#
plot(panel5dat$log_freq.target.repub, panel5dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel5dat[1,]$log_freq.target.repub, panel5dat[1,]$dep, panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, lty=1) #
text(panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[2])#
segments(panel5dat[3,]$log_freq.target.repub, panel5dat[3,]$dep, panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, lty=2)#
text(panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[4])#
segments(panel5dat[5,]$log_freq.target.repub, panel5dat[5,]$dep, panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, lty=3)#
text(panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[6])#
segments(panel5dat[7,]$log_freq.target.repub, panel5dat[7,]$dep, panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, lty=3)#
text(panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[8])#
segments(panel5dat[9,]$log_freq.target.repub, panel5dat[9,]$dep, panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, lty=3)#
text(panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[10])#
###############
# LABEL LENGTH = 14#
##############
#
#par(mar = c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 14", pos = 1, cex=1.5)#
#
##########
##########
#
par(mar=c(5.1, 4.1, 4.1, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel3dat=predman(panel3dat)#
#
panel3dat$dep=pred_panel3dat#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 6 (LENGTH=14) ###############
#############################################
#
panel6dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel6dat=predman(panel6dat)#
#
panel6dat$dep=pred_panel6dat#
plot(panel6dat$log_freq.target.repub, panel6dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel6dat[1,]$log_freq.target.repub, panel6dat[1,]$dep, panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, lty=1) #
text(panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[2])#
segments(panel6dat[3,]$log_freq.target.repub, panel6dat[3,]$dep, panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, lty=2)#
text(panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[4])#
segments(panel6dat[5,]$log_freq.target.repub, panel6dat[5,]$dep, panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, lty=3)#
text(panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[6])#
segments(panel6dat[7,]$log_freq.target.repub, panel6dat[7,]$dep, panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, lty=3)#
text(panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[8])#
segments(panel6dat[9,]$log_freq.target.repub, panel6dat[9,]$dep, panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, lty=3)#
text(panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
#
# TYPE * FREQ.COMP * FREQ1#
#
panels_freq.const2=median(stimuliNN$res_log_freq.const2.repub)#
panels_length.target=median(stimuliNN$length.target)#
panels_comp.freq=c(0.6931472, 7.2984451) #
panels_freq.const1=quantile(stimuliNN$log_freq.const1.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
#
par(mfrow=c(1,2))#
#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[2],2))#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[4],2))#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[6],2))#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[8],2))#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[10],2))#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
#
pred_panel2dat=predman(panel2dat)#
panel2dat$dep=exp(pred_panel2dat)#
#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="NN2")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[2],2))#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[4],2))#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[6],2))#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[8],2))#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[10],2))
max(stimuliNN$log_freq_repub)
max(stimuliNN$log_freq.target.repub)
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) ##
#############################################
### SUDDIVIDO I PANNELLI#
#############################################
#
#m <- matrix(c(1,1,2,3,4,4,5,6,7,7,8,9),ncol = 2,byrow = TRUE)#
#layout(m,widths = c(0.5,0.5),heights = c(0.04, 0.3, 0.03, 0.3, 0.03, 0.3))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
###############
# LABEL LENGTH = 10#
##############
#oldpar=par()#
#
#par(mar=c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 10", pos = 1, cex=1.5)#
##########
#
par(mfrow=c(3,2), mar=c(5.1, 4.1, 2, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=pred_panel1dat#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(5,8), xlim=c(0,7.5), ylab="Total View Duration", xlab="Compound frequency", main="", yaxt="n")#
axis(2, at=log(seq(100, 2000, 300)), labels=seq(100, 2000, 300))#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=10) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=pred_panel4dat#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])#
###############
# LABEL LENGTH = 10#
##############
#
#par(mar = c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 12", pos = 1, cex=1.5)#
#
##########
##########
#
par(mar=c(5.1, 4.1, 4.1, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel2dat=predman(panel2dat)#
#
panel2dat$dep=pred_panel2dat#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 5 (LENGTH=12) ###############
#############################################
#
panel5dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel5dat=predman(panel5dat)#
#
panel5dat$dep=pred_panel5dat#
plot(panel5dat$log_freq.target.repub, panel5dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel5dat[1,]$log_freq.target.repub, panel5dat[1,]$dep, panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, lty=1) #
text(panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[2])#
segments(panel5dat[3,]$log_freq.target.repub, panel5dat[3,]$dep, panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, lty=2)#
text(panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[4])#
segments(panel5dat[5,]$log_freq.target.repub, panel5dat[5,]$dep, panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, lty=3)#
text(panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[6])#
segments(panel5dat[7,]$log_freq.target.repub, panel5dat[7,]$dep, panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, lty=3)#
text(panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[8])#
segments(panel5dat[9,]$log_freq.target.repub, panel5dat[9,]$dep, panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, lty=3)#
text(panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[10])#
###############
# LABEL LENGTH = 14#
##############
#
#par(mar = c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 14", pos = 1, cex=1.5)#
#
##########
##########
#
par(mar=c(5.1, 4.1, 4.1, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel3dat=predman(panel3dat)#
#
panel3dat$dep=pred_panel3dat#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 6 (LENGTH=14) ###############
#############################################
#
panel6dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel6dat=predman(panel6dat)#
#
panel6dat$dep=pred_panel6dat#
plot(panel6dat$log_freq.target.repub, panel6dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel6dat[1,]$log_freq.target.repub, panel6dat[1,]$dep, panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, lty=1) #
text(panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[2])#
segments(panel6dat[3,]$log_freq.target.repub, panel6dat[3,]$dep, panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, lty=2)#
text(panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[4])#
segments(panel6dat[5,]$log_freq.target.repub, panel6dat[5,]$dep, panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, lty=3)#
text(panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[6])#
segments(panel6dat[7,]$log_freq.target.repub, panel6dat[7,]$dep, panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, lty=3)#
text(panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[8])#
segments(panel6dat[9,]$log_freq.target.repub, panel6dat[9,]$dep, panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, lty=3)#
text(panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
#
# TYPE * FREQ.COMP * FREQ1#
#
panels_freq.const2=median(stimuliNN$res_log_freq.const2.repub)#
panels_length.target=median(stimuliNN$length.target)#
panels_comp.freq=c(0.6931472, 7.2984451) #
panels_freq.const1=quantile(stimuliNN$log_freq.const1.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
#
par(mfrow=c(1,2))#
#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,7.5), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[2],2))#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[4],2))#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[6],2))#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[8],2))#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[10],2))#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
#
pred_panel2dat=predman(panel2dat)#
panel2dat$dep=exp(pred_panel2dat)#
#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,7.5), ylab="Total View Duration", xlab="Compound frequency", main="NN2")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[2],2))#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[4],2))#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[6],2))#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[8],2))#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[10],2))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
#
# TYPE * FREQ.COMP * FREQ1#
#
panels_freq.const2=median(stimuliNN$res_log_freq.const2.repub)#
panels_length.target=median(stimuliNN$length.target)#
panels_comp.freq=c(0.6931472, 6.8) #
panels_freq.const1=quantile(stimuliNN$log_freq.const1.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
#
par(mfrow=c(1,2))#
#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0, 8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[2],2))#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[4],2))#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[6],2))#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[8],2))#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[10],2))#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
#
pred_panel2dat=predman(panel2dat)#
panel2dat$dep=exp(pred_panel2dat)#
#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,7.5), ylab="Total View Duration", xlab="Compound frequency", main="NN2")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[2],2))#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[4],2))#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[6],2))#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[8],2))#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[10],2))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
#
# TYPE * FREQ.COMP * FREQ1#
#
panels_freq.const2=median(stimuliNN$res_log_freq.const2.repub)#
panels_length.target=median(stimuliNN$length.target)#
panels_comp.freq=c(0.6931472, 6) #
panels_freq.const1=quantile(stimuliNN$log_freq.const1.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
#
par(mfrow=c(1,2))#
#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0, 8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[2],2))#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[4],2))#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[6],2))#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[8],2))#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[10],2))#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
#
pred_panel2dat=predman(panel2dat)#
panel2dat$dep=exp(pred_panel2dat)#
#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,7.5), ylab="Total View Duration", xlab="Compound frequency", main="NN2")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[2],2))#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[4],2))#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[6],2))#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[8],2))#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[10],2))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
#
# TYPE * FREQ.COMP * FREQ1#
#
panels_freq.const2=median(stimuliNN$res_log_freq.const2.repub)#
panels_length.target=median(stimuliNN$length.target)#
panels_comp.freq=c(0.6931472, 7.2984451) #
panels_freq.const1=quantile(stimuliNN$log_freq.const1.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
#
par(mfrow=c(1,2))#
#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0, 8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[2],2))#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[4],2))#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[6],2))#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[8],2))#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[10],2))#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
#
pred_panel2dat=predman(panel2dat)#
panel2dat$dep=exp(pred_panel2dat)#
#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0,7.5), ylab="Total View Duration", xlab="Compound frequency", main="NN2")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[2],2))#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[4],2))#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[6],2))#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[8],2))#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[10],2))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
#
# TYPE * FREQ.COMP * FREQ1#
#
panels_freq.const2=median(stimuliNN$res_log_freq.const2.repub)#
panels_length.target=median(stimuliNN$length.target)#
panels_comp.freq=c(0.6931472, 7.2984451) #
panels_freq.const1=quantile(stimuliNN$log_freq.const1.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
#
par(mfrow=c(1,2))#
#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0, 8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[2],2))#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[4],2))#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[6],2))#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[8],2))#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[10],2))#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
#
pred_panel2dat=predman(panel2dat)#
panel2dat$dep=exp(pred_panel2dat)#
#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0, 8), ylab="Total View Duration", xlab="Compound frequency", main="NN2")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[2],2))#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[4],2))#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[6],2))#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[8],2))#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[10],2))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) ##
#############################################
### SUDDIVIDO I PANNELLI#
#############################################
#
#m <- matrix(c(1,1,2,3,4,4,5,6,7,7,8,9),ncol = 2,byrow = TRUE)#
#layout(m,widths = c(0.5,0.5),heights = c(0.04, 0.3, 0.03, 0.3, 0.03, 0.3))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
###############
# LABEL LENGTH = 10#
##############
#oldpar=par()#
#
#par(mar=c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 10", pos = 1, cex=1.5)#
##########
#
par(mfrow=c(3,2), mar=c(5.1, 4.1, 2, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=pred_panel1dat#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(5,8), xlim=c(0, 8), ylab="Total View Duration", xlab="Compound frequency", main="", yaxt="n")#
axis(2, at=log(seq(100, 2000, 300)), labels=seq(100, 2000, 300))#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=10) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=pred_panel4dat#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])#
###############
# LABEL LENGTH = 10#
##############
#
#par(mar = c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 12", pos = 1, cex=1.5)#
#
##########
##########
#
par(mar=c(5.1, 4.1, 4.1, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel2dat=predman(panel2dat)#
#
panel2dat$dep=pred_panel2dat#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 5 (LENGTH=12) ###############
#############################################
#
panel5dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel5dat=predman(panel5dat)#
#
panel5dat$dep=pred_panel5dat#
plot(panel5dat$log_freq.target.repub, panel5dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel5dat[1,]$log_freq.target.repub, panel5dat[1,]$dep, panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, lty=1) #
text(panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[2])#
segments(panel5dat[3,]$log_freq.target.repub, panel5dat[3,]$dep, panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, lty=2)#
text(panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[4])#
segments(panel5dat[5,]$log_freq.target.repub, panel5dat[5,]$dep, panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, lty=3)#
text(panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[6])#
segments(panel5dat[7,]$log_freq.target.repub, panel5dat[7,]$dep, panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, lty=3)#
text(panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[8])#
segments(panel5dat[9,]$log_freq.target.repub, panel5dat[9,]$dep, panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, lty=3)#
text(panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[10])#
###############
# LABEL LENGTH = 14#
##############
#
#par(mar = c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 14", pos = 1, cex=1.5)#
#
##########
##########
#
par(mar=c(5.1, 4.1, 4.1, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel3dat=predman(panel3dat)#
#
panel3dat$dep=pred_panel3dat#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 6 (LENGTH=14) ###############
#############################################
#
panel6dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel6dat=predman(panel6dat)#
#
panel6dat$dep=pred_panel6dat#
plot(panel6dat$log_freq.target.repub, panel6dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel6dat[1,]$log_freq.target.repub, panel6dat[1,]$dep, panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, lty=1) #
text(panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[2])#
segments(panel6dat[3,]$log_freq.target.repub, panel6dat[3,]$dep, panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, lty=2)#
text(panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[4])#
segments(panel6dat[5,]$log_freq.target.repub, panel6dat[5,]$dep, panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, lty=3)#
text(panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[6])#
segments(panel6dat[7,]$log_freq.target.repub, panel6dat[7,]$dep, panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, lty=3)#
text(panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[8])#
segments(panel6dat[9,]$log_freq.target.repub, panel6dat[9,]$dep, panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, lty=3)#
text(panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[10])
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
par(mfrow=c(1,2))#
### interazione type*freq.const1*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
panels_freq.const2=median(stimuliNN$res_log_freq.const2.repub)#
panels_freq.const1=quantile(stimuliNN$log_freq.const1.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_length.target=c(8,14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=median(stimuliNN$log_freq.target.repub) ##
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, 10), length.target=rep(panels_length.target, 5), log_freq.target.repub=rep(panels_comp.freq, 10))#
#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=pred_panel1dat#
plot(panel1dat$length.target, panel1dat$dep, type="n", ylim=c(5, 8), xlim=c(8,15), ylab="Total View Duration", xlab="Compound length", main="NN1")#
segments(panel1dat[1,]$length.target, panel1dat[1,]$dep, panel1dat[2,]$length.target, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$length.target, panel1dat[2,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[2],2))#
segments(panel1dat[3,]$length.target, panel1dat[3,]$dep, panel1dat[4,]$length.target, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$length.target, panel1dat[4,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[4],2))#
segments(panel1dat[5,]$length.target, panel1dat[5,]$dep, panel1dat[6,]$length.target, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$length.target, panel1dat[6,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[6],2))#
segments(panel1dat[7,]$length.target, panel1dat[7,]$dep, panel1dat[8,]$length.target, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$length.target, panel1dat[8,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[8],2))#
segments(panel1dat[9,]$length.target, panel1dat[9,]$dep, panel1dat[10,]$length.target, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$length.target, panel1dat[10,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[10],2))#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, 10), length.target=rep(panels_length.target, 5), log_freq.target.repub=rep(panels_comp.freq, 10))#
#
pred_panel2dat=predman(panel2dat)#
#
panel2dat$dep=pred_panel2dat#
plot(panel2dat$length.target, panel2dat$dep, type="n", ylim=c(5, 8), xlim=c(8,15), ylab="Total View Duration", xlab="Compound length", main="NN2")#
segments(panel2dat[1,]$length.target, panel2dat[1,]$dep, panel2dat[2,]$length.target, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$length.target, panel2dat[2,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[2],2))#
segments(panel2dat[3,]$length.target, panel2dat[3,]$dep, panel2dat[4,]$length.target, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$length.target, panel2dat[4,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[4],2))#
segments(panel2dat[5,]$length.target, panel2dat[5,]$dep, panel2dat[6,]$length.target, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$length.target, panel2dat[6,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[6],2))#
segments(panel2dat[7,]$length.target, panel2dat[7,]$dep, panel2dat[8,]$length.target, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$length.target, panel2dat[8,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[8],2))#
segments(panel2dat[9,]$length.target, panel2dat[9,]$dep, panel2dat[10,]$length.target, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$length.target, panel2dat[10,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[10],2))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
#
# TYPE * FREQ.COMP * FREQ1#
#
panels_freq.const2=median(stimuliNN$res_log_freq.const2.repub)#
panels_length.target=median(stimuliNN$length.target)#
panels_comp.freq=c(0.6931472, 7.2984451) #
panels_freq.const1=quantile(stimuliNN$log_freq.const1.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=exp(pred_panel1dat)#
#
par(mfrow=c(1,2))#
#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(200, 2000), xlim=c(0, 8), ylab="Total View Duration", xlab="Compound frequency", main="NN1")#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[2],2))#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[4],2))#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[6],2))#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[8],2))#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=round(panel1dat$log_freq.const1.repub[10],2))#
panel2dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(panels_freq.const1, each=2), res_log_freq.const2.repub=rep(panels_freq.const2, each=5), length.target=rep(panels_length.target, 10), log_freq.target.repub=rep(panels_comp.freq, 5))#
#
pred_panel2dat=predman(panel2dat)#
panel2dat$dep=exp(pred_panel2dat)#
#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(200, 2000), xlim=c(0, 8), ylab="Total View Duration", xlab="Compound frequency", main="NN2")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[2],2))#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[4],2))#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[6],2))#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[8],2))#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=round(panel2dat$log_freq.const1.repub[10],2))
prima manda script analisi trasparenza#
source('~/Desktop/eye mvm compounds/composti rating trasparenza/history analisi frasi con trasparenza.R', chdir = TRUE)#
###### FIGURA 2 PAPER #######
coeffs=summary(NN.final.reported)$coefficients[,"Estimate"]#
#creo funzione per fare previsioni#
#
predman<-function(dat) {#
attach(dat)#
mypred= #
coeffs[1] + #
(typeNNsx*coeffs[2]) +  #
(coeffs[3] * log_freq.target.repub  )+ #
(coeffs[4] * log_freq.const1.repub )+ #
(coeffs[5] * res_log_freq.const2.repub )+#
(coeffs[6] * length.target) + #
(coeffs[7] * typeNNsx*log_freq.target.repub)+ #
(coeffs[8] * typeNNsx*log_freq.const1.repub )+ #
(coeffs[9] * log_freq.target.repub * log_freq.const1.repub )+#
(coeffs[10] * typeNNsx * res_log_freq.const2.repub  )+ #
(coeffs[11] * log_freq.target.repub * res_log_freq.const2.repub )+ #
(coeffs[12] * typeNNsx * length.target )+#
(coeffs[13] * log_freq.target.repub * length.target ) + #
(coeffs[14] * log_freq.const1.repub*length.target ) + #
(coeffs[15] * res_log_freq.const2.repub*length.target) + #
(coeffs[16] * typeNNsx*log_freq.target.repub*log_freq.const1.repub )+#
(coeffs[17] * typeNNsx * log_freq.target.repub * res_log_freq.const2.repub) +#
(coeffs[18] * typeNNsx * log_freq.target.repub * length.target) +#
(coeffs[19] * typeNNsx*log_freq.const1.repub*length.target)+#
(coeffs[20] * log_freq.target.repub*log_freq.const1.repub*length.target) + #
(coeffs[21] * typeNNsx * res_log_freq.const2.repub * length.target)+#
(coeffs[22] * log_freq.target.repub*res_log_freq.const2.repub*length.target) + #
(coeffs[23] * typeNNsx*log_freq.target.repub*res_log_freq.const2.repub*length.target)#
detach(dat)#
#
return(mypred)#
}#
### interazione type*freq.comp*freq2*length#
#
#pannello 1 type=NN1; freq.comp=span, freq.const2=5 values, length=3 values#
#
panels_freq.const2=quantile(stimuliNN$res_log_freq.const2.repub, prob=c(0.10, 0.30, 0.50, 0.70, 0.80), type=1) #
# i valori che mi trova con i quantili potrebbero non essere osservati, cambio metodo di definizione di quantili (di default type=7) per ottenere valori osservati#
panels_or_freq.const2= stimuliNN[stimuliNN$res_log_freq.const2.repub%in%panels_freq.const2, "log_freq.const2.repub"]#
panels_or_freq.const2=sort(round(panels_or_freq.const2,2))#
# recupero i valori grezzi di frequenza assoluta associata ai residui.#
#
panels_length.target=c(10, 12, 14) #
#in realtà usando i quantili 0.20, 0.40 e 0.60 i valori sarebbero troppo simili, per cui li ho presi io arbitariamente con un range decente.#
panels_comp.freq=c(0.6931472, 7.2984451) ##
#############################################
### SUDDIVIDO I PANNELLI#
#############################################
#
#m <- matrix(c(1,1,2,3,4,4,5,6,7,7,8,9),ncol = 2,byrow = TRUE)#
#layout(m,widths = c(0.5,0.5),heights = c(0.04, 0.3, 0.03, 0.3, 0.03, 0.3))#
#############################################
######## PANEL 1  (LENGTH=10) ###############
#############################################
###############
# LABEL LENGTH = 10#
##############
#oldpar=par()#
#
#par(mar=c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 10", pos = 1, cex=1.5)#
##########
#
par(mfrow=c(3,2), mar=c(5.1, 4.1, 2, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
panel1dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
pred_panel1dat=predman(panel1dat)#
#
panel1dat$dep=pred_panel1dat#
plot(panel1dat$log_freq.target.repub, panel1dat$dep, type="n", ylim=c(5,8), xlim=c(0, 8), ylab="Total View Duration", xlab="Compound frequency", main="", yaxt="n")#
axis(2, at=log(seq(100, 2000, 300)), labels=seq(100, 2000, 300))#
segments(panel1dat[1,]$log_freq.target.repub, panel1dat[1,]$dep, panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, lty=1) #
text(panel1dat[2,]$log_freq.target.repub, panel1dat[2,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[2])#
segments(panel1dat[3,]$log_freq.target.repub, panel1dat[3,]$dep, panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, lty=2)#
text(panel1dat[4,]$log_freq.target.repub, panel1dat[4,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[4])#
segments(panel1dat[5,]$log_freq.target.repub, panel1dat[5,]$dep, panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, lty=3)#
text(panel1dat[6,]$log_freq.target.repub, panel1dat[6,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[6])#
segments(panel1dat[7,]$log_freq.target.repub, panel1dat[7,]$dep, panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, lty=3)#
text(panel1dat[8,]$log_freq.target.repub, panel1dat[8,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[8])#
segments(panel1dat[9,]$log_freq.target.repub, panel1dat[9,]$dep, panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, lty=3)#
text(panel1dat[10,]$log_freq.target.repub, panel1dat[10,]$dep, pos=4, cex=0.7, labels=panel1dat$log_freq.const2.repub[10])#
#
#############################################
######## PANEL 4 (LENGTH=10) ###############
#############################################
#
panel4dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(10, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2,each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
pred_panel4dat=predman(panel4dat)#
#
panel4dat$dep=pred_panel4dat#
plot(panel4dat$log_freq.target.repub, panel4dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel4dat[1,]$log_freq.target.repub, panel4dat[1,]$dep, panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, lty=1) #
text(panel4dat[2,]$log_freq.target.repub, panel4dat[2,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[2])#
segments(panel4dat[3,]$log_freq.target.repub, panel4dat[3,]$dep, panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, lty=2)#
text(panel4dat[4,]$log_freq.target.repub, panel4dat[4,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[4])#
segments(panel4dat[5,]$log_freq.target.repub, panel4dat[5,]$dep, panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, lty=3)#
text(panel4dat[6,]$log_freq.target.repub, panel4dat[6,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[6])#
segments(panel4dat[7,]$log_freq.target.repub, panel4dat[7,]$dep, panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, lty=3)#
text(panel4dat[8,]$log_freq.target.repub, panel4dat[8,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[8])#
segments(panel4dat[9,]$log_freq.target.repub, panel4dat[9,]$dep, panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, lty=3)#
text(panel4dat[10,]$log_freq.target.repub, panel4dat[10,]$dep, pos=4, cex=0.7, labels=panel4dat$log_freq.const2.repub[10])#
###############
# LABEL LENGTH = 10#
##############
#
#par(mar = c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 12", pos = 1, cex=1.5)#
#
##########
##########
#
par(mar=c(5.1, 4.1, 4.1, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
#############################################
######## PANEL 2 (LENGTH=12) ###############
#############################################
#
panel2dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel2dat=predman(panel2dat)#
#
panel2dat$dep=pred_panel2dat#
plot(panel2dat$log_freq.target.repub, panel2dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel2dat[1,]$log_freq.target.repub, panel2dat[1,]$dep, panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, lty=1) #
text(panel2dat[2,]$log_freq.target.repub, panel2dat[2,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[2])#
segments(panel2dat[3,]$log_freq.target.repub, panel2dat[3,]$dep, panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, lty=2)#
text(panel2dat[4,]$log_freq.target.repub, panel2dat[4,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[4])#
segments(panel2dat[5,]$log_freq.target.repub, panel2dat[5,]$dep, panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, lty=3)#
text(panel2dat[6,]$log_freq.target.repub, panel2dat[6,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[6])#
segments(panel2dat[7,]$log_freq.target.repub, panel2dat[7,]$dep, panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, lty=3)#
text(panel2dat[8,]$log_freq.target.repub, panel2dat[8,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[8])#
segments(panel2dat[9,]$log_freq.target.repub, panel2dat[9,]$dep, panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, lty=3)#
text(panel2dat[10,]$log_freq.target.repub, panel2dat[10,]$dep, pos=4, cex=0.7, labels=panel2dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 5 (LENGTH=12) ###############
#############################################
#
panel5dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(12, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel5dat=predman(panel5dat)#
#
panel5dat$dep=pred_panel5dat#
plot(panel5dat$log_freq.target.repub, panel5dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel5dat[1,]$log_freq.target.repub, panel5dat[1,]$dep, panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, lty=1) #
text(panel5dat[2,]$log_freq.target.repub, panel5dat[2,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[2])#
segments(panel5dat[3,]$log_freq.target.repub, panel5dat[3,]$dep, panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, lty=2)#
text(panel5dat[4,]$log_freq.target.repub, panel5dat[4,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[4])#
segments(panel5dat[5,]$log_freq.target.repub, panel5dat[5,]$dep, panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, lty=3)#
text(panel5dat[6,]$log_freq.target.repub, panel5dat[6,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[6])#
segments(panel5dat[7,]$log_freq.target.repub, panel5dat[7,]$dep, panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, lty=3)#
text(panel5dat[8,]$log_freq.target.repub, panel5dat[8,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[8])#
segments(panel5dat[9,]$log_freq.target.repub, panel5dat[9,]$dep, panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, lty=3)#
text(panel5dat[10,]$log_freq.target.repub, panel5dat[10,]$dep, pos=4, cex=0.7, labels=panel5dat$log_freq.const2.repub[10])#
###############
# LABEL LENGTH = 14#
##############
#
#par(mar = c(0,0,0,0)) #
#plot(1,1,type = "n",frame.plot = FALSE,axes = FALSE)#
#u <- par("usr")#
#text(1,u[4],labels = "Length = 14", pos = 1, cex=1.5)#
#
##########
##########
#
par(mar=c(5.1, 4.1, 4.1, 2.1))#
#par(mar = c(2,4,2,2) + 0.1)#
#############################################
######## PANEL 3 (LENGTH=14) ###############
#############################################
#
panel3dat=data.frame(typeNNsx=rep(1,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel3dat=predman(panel3dat)#
#
panel3dat$dep=pred_panel3dat#
plot(panel3dat$log_freq.target.repub, panel3dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel3dat[1,]$log_freq.target.repub, panel3dat[1,]$dep, panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, lty=1) #
text(panel3dat[2,]$log_freq.target.repub, panel3dat[2,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[2])#
segments(panel3dat[3,]$log_freq.target.repub, panel3dat[3,]$dep, panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, lty=2)#
text(panel3dat[4,]$log_freq.target.repub, panel3dat[4,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[4])#
segments(panel3dat[5,]$log_freq.target.repub, panel3dat[5,]$dep, panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, lty=3)#
text(panel3dat[6,]$log_freq.target.repub, panel3dat[6,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[6])#
segments(panel3dat[7,]$log_freq.target.repub, panel3dat[7,]$dep, panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, lty=3)#
text(panel3dat[8,]$log_freq.target.repub, panel3dat[8,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[8])#
segments(panel3dat[9,]$log_freq.target.repub, panel3dat[9,]$dep, panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, lty=3)#
text(panel3dat[10,]$log_freq.target.repub, panel3dat[10,]$dep, pos=4, cex=0.7, labels=panel3dat$log_freq.const2.repub[10])#
#############################################
######## PANEL 6 (LENGTH=14) ###############
#############################################
#
panel6dat=data.frame(typeNNsx=rep(0,10), log_freq.const1.repub=rep(median(stimuliNN$log_freq.const1.repub), 10),res_log_freq.const2.repub=rep(panels_freq.const2, each=2), length.target=rep(14, 10), log_freq.target.repub=rep(panels_comp.freq, 5), log_freq.const2.repub=rep(panels_or_freq.const2, each=2))#
#
# in pratica ho costruito un data.frame in cui le coppie successive di righe mi indicano i punti delle previsioni separatamente per frequenza const 2, prendendo due punti (iniziale e finale) della frequenza totale del composto.#
#
pred_panel6dat=predman(panel6dat)#
#
panel6dat$dep=pred_panel6dat#
plot(panel6dat$log_freq.target.repub, panel6dat$dep, type="n", ylim=c(5,8), xlim=c(0,8), ylab="Total View Duration", xlab="Compound frequency", main="")#
segments(panel6dat[1,]$log_freq.target.repub, panel6dat[1,]$dep, panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, lty=1) #
text(panel6dat[2,]$log_freq.target.repub, panel6dat[2,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[2])#
segments(panel6dat[3,]$log_freq.target.repub, panel6dat[3,]$dep, panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, lty=2)#
text(panel6dat[4,]$log_freq.target.repub, panel6dat[4,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[4])#
segments(panel6dat[5,]$log_freq.target.repub, panel6dat[5,]$dep, panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, lty=3)#
text(panel6dat[6,]$log_freq.target.repub, panel6dat[6,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[6])#
segments(panel6dat[7,]$log_freq.target.repub, panel6dat[7,]$dep, panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, lty=3)#
text(panel6dat[8,]$log_freq.target.repub, panel6dat[8,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[8])#
segments(panel6dat[9,]$log_freq.target.repub, panel6dat[9,]$dep, panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, lty=3)#
text(panel6dat[10,]$log_freq.target.repub, panel6dat[10,]$dep, pos=4, cex=0.7, labels=panel6dat$log_freq.const2.repub[10])
parser:nlines
parser::nlines
parser::nlines
dir("~/Desktop/R files/erpr/pkg/R")
setwd("~/Desktop/R files/erpr/pkg/R")
files=dir()
files
i=
1
temp=readLines(files[i])
temp
grep("^[ ]#", temp)
grep("^ #", temp)
grep("#", temp)
grep("[]#", temp)
grep("[ ]#", temp)
grep("^[ ]#", temp)
temp2=gsub(" ", "", temp)
temp2
temp2[!grep("^#", temp)]
temp2[-grep("^#", temp)]
temp2
temp2[grep("^#", temp2)]
temp2[-grep("^#", temp2)]
temp4=temp3[!temp3=="",]
temp3=temp2[-grep("^#", temp)]  # tolgo linee con solo commenti#
	temp4=temp3[!temp3=="",]
temp3=temp2[-grep("^#", temp)]  # tolgo linee con solo commenti#
	temp4=temp3[!temp3==""]
temp4
temp3
temp2=gsub(" ", "", temp)#
	temp3=temp2[-grep("^#", temp)]  # tolgo linee con solo c
temp3
temp3=temp2[-grep("^#", temp2)]  # tolgo linee con solo commenti
temp3
temp4=temp3[!temp3=="",]
temp3
temp3==""
temp4=temp3[!temp3==""]
temp4
tot.count=0
tot.count=tot.count+length(temp4)
tot.count
CONTA LINEE DI CODICE IN VARI FILES#
#
setwd("~/Desktop/R files/erpr/pkg/R")#
#
files=dir()#
#
tot.count=0#
#
for (i in 1:length(files)){#
	temp=readLines(files[i])#
	temp2=gsub(" ", "", temp) #tolgo spazi, in modo da eliminare poi righe vuote e allineare il simbolo di commento # a sx.#
	temp3=temp2[-grep("^#", temp2)]  # tolgo linee che cominciano con ##
	temp4=temp3[!temp3==""] #tolgo righe solo con spazi#
	tot.count=tot.count+length(temp4)#
}
CONTA LINEE DI CODICE IN VARI FILES#
#
setwd("~/Desktop/R files/erpr/pkg/R")#
#
files=dir()#
#
tot.count=0#
#
for (i in 1:length(files)){#
	temp=readLines(files[i])#
	temp2=gsub(" ", "", temp) #tolgo spazi, in modo da eliminare poi righe vuote e allineare il simbolo di commento # a sx.#
	temp3=temp2[-grep("^#", temp2)]  # tolgo linee che cominciano con ##
	temp4=temp3[!temp3==""] #tolgo righe solo con spazi#
	tot.count=tot.count+length(temp4)#
}
CONTA LINEE DI CODICE IN VARI FILES#
#
setwd("~/Desktop/R files/erpr/pkg/R")#
#
files=dir()#
#
tot.count=0#
#
for (i in 1:length(files)){#
	temp=readLines(files[i])#
	temp2=gsub(" ", "", temp) #tolgo spazi, in modo da eliminare poi righe vuote e allineare il simbolo di commento # a sx.#
	temp3=temp2[-grep("^#", temp2)]  # tolgo linee che cominciano con ##
	temp4=temp3[!temp3==""] #tolgo righe solo con spazi#
	tot.count=tot.count+length(temp4)#
}
i
CONTA LINEE DI CODICE IN VARI FILES#
#
setwd("~/Desktop/R files/erpr/pkg/R")#
#
files=dir()#
#
tot.count=0#
#
for (i in 1:length(files)){#
	temp=readLines(files[i])#
	temp2=gsub(" ", "", temp) #tolgo spazi, in modo da eliminare poi righe vuote e allineare il simbolo di commento # a sx.#
	temp3=temp2[-grep("^#", temp2)]  # tolgo linee che cominciano con ##
	temp4=temp3[!temp3==""] #tolgo righe solo con spazi#
	tot.count=tot.count+length(temp4)#
}
i
files[i]
tot.count
